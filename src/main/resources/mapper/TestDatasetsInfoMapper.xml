<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifchange.regressiontest.dao.TestDatasetsInfoMapper">
    <resultMap id="BaseResultMap" type="com.ifchange.regressiontest.model.TestDatasetsInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="dataset_type_id" jdbcType="INTEGER" property="datasetTypeId"/>
        <result column="test_case_count" jdbcType="INTEGER" property="testCaseCount"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        <association property="testDatasetTypesInfo" column="dataset_type_id"
                     javaType="com.ifchange.regressiontest.model.TestDatasetTypesInfo">
            <id column="type_id" jdbcType="INTEGER" property="id"/>
            <result column="type_name" jdbcType="VARCHAR" property="name"/>
            <result column="type_desc" jdbcType="VARCHAR" property="desc"/>
            <result column="type_default_service_address" jdbcType="VARCHAR" property="defaultServiceAddress"/>
            <result column="type_created_by" jdbcType="VARCHAR" property="createdBy"/>
            <result column="type_created_date" jdbcType="TIMESTAMP" property="createdDate"/>
            <result column="type_updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        </association>
        <collection property="testExecutionsInfoList" ofType="com.ifchange.regressiontest.model.TestExecutionsInfo">
            <id column="exec_id" jdbcType="INTEGER" property="id"/>
            <result column="exec_name" jdbcType="VARCHAR" property="name"/>
            <result column="exec_desc" jdbcType="VARCHAR" property="desc"/>
            <result column="exec_test_dataset_id" jdbcType="INTEGER" property="testDatasetId"/>
            <result column="exec_testcase_count" jdbcType="INTEGER" property="testcaseCount"/>
            <result column="exec_finished_testcase_count" jdbcType="INTEGER" property="finishedTestcaseCount"/>
            <result column="exec_test_execution_status" jdbcType="VARCHAR" property="testExecutionStatus"/>
            <result column="exec_passed_testcase_count" jdbcType="INTEGER" property="passedTestcaseCount"/>
            <result column="exec_correctness_score" jdbcType="DOUBLE" property="correctnessScore"/>
            <result column="exec_adjusted_correctness_score" jdbcType="DOUBLE" property="adjustedCorrectnessScore"/>
            <result column="exec_correctness_distribution" jdbcType="VARCHAR" property="correctnessDistribution"/>
            <result column="exec_service_address" jdbcType="VARCHAR" property="serviceAddress"/>
            <result column="exec_created_by" jdbcType="VARCHAR" property="createdBy"/>
            <result column="exec_created_date" jdbcType="TIMESTAMP" property="createdDate"/>
            <result column="exec_updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        </collection>
        <collection property="testcasesList" ofType="com.ifchange.regressiontest.model.Testcases">
            <id column="testcase_id" jdbcType="INTEGER" property="id"/>
            <result column="testcase_dataset_id" jdbcType="INTEGER" property="datasetId"/>
            <result column="testcase_data" jdbcType="LONGVARCHAR" property="data"/>
            <result column="testcase_expect_data" jdbcType="LONGVARCHAR" property="expectData"/>
            <result column="testcase_weight" jdbcType="DOUBLE" property="weight"/>
            <result column="testcase_created_date" jdbcType="TIMESTAMP" property="createdDate"/>
            <result column="testcase_updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, `name`, `desc`, dataset_type_id, test_case_count, created_by, created_date, updated_date
  </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_datasets_info
    </select>

    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_datasets_info
        where name = #{name,jdbcType=INTEGER}
    </select>

    <select id="selectSetAndExecutionBySetId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        tdi.id, tdi.`name`, tdi.`desc`, tdi.dataset_type_id, tdi.test_case_count, tdi.created_by, tdi.created_date, tdi.updated_date,
        tei.id as exec_id, tei.name as exec_name, tei.desc as exec_desc, tei.test_dataset_id as exec_test_dataset_id, tei.testcase_count as exec_testcase_count, tei.finished_testcase_count as exec_finished_testcase_count, tei.test_execution_status as exec_test_execution_status,
        tei.passed_testcase_count as exec_passed_testcase_count, tei.correctness_score as exec_correctness_score, tei.adjusted_correctness_score as exec_adjusted_correctness_score, tei.correctness_distribution as exec_correctness_distribution,
        tei.service_address as exec_service_address, tei.created_by as exec_created_by, tei.created_date as exec_created_date, tei.updated_date as exec_updated_date
        from test_datasets_info tdi LEFT JOIN test_executions_info tei on tei.test_dataset_id = tdi.id where tdi.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectSetAndTestcaseBySetId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        tdi.id, tdi.`name`, tdi.`desc`, tdi.dataset_type_id, tdi.test_case_count, tdi.created_by, tdi.created_date, tdi.updated_date,
        tc.id as testcase_id, tc.dataset_id as testcase_dataset_id, tc.data as testcase_data, tc.expect_data as testcase_expect_data, tc.weight as testcase_weight, tc.created_date as testcase_created_date, tc.updated_date as testcase_updated_date
        from test_datasets_info tdi LEFT JOIN testcases tc on tc.dataset_id = tdi.id where tdi.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectSetAndTypeBySetId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        tdi.id, tdi.`name`, tdi.`desc`, tdi.dataset_type_id, tdi.test_case_count, tdi.created_by, tdi.created_date, tdi.updated_date,
         tdti.id as type_id, tdti.`name` as type_name, tdti.`desc` as type_desc, tdti.default_service_address as type_default_service_address, tdti.created_by as type_created_by, tdti.created_date as type_created_date, tdti.updated_date as type_updated_date
         from test_datasets_info tdi left join test_dataset_types_info tdti on tdi.dataset_type_id = tdti.id where tdi.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_datasets_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByTypeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_datasets_info
        where dataset_type_id = #{datasetTypeId ,jdbcType=INTEGER}
    </select>

    <select id="selectByPrimaryKeyList" parameterType="java.util.List" resultMap="BaseResultMap">
        select * from test_datasets_info
        where id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectSelective" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_datasets_info
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER}
            </if>
            <if test="name != null and name != ''">
                and name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="desc != null and desc != ''">
                and `desc` = #{desc,jdbcType=VARCHAR}
            </if>
            <if test="datasetTypeId != null">
                and dataset_type_id = #{datasetTypeId,jdbcType=INTEGER}
            </if>
            <if test="testCaseCount != null">
                and test_case_count = #{testCaseCount,jdbcType=INTEGER}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDate != null">
                and created_date = #{createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updatedDate != null">
                and updated_date = #{updatedDate,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </select>

    <select id="selectSetAndTypeSelective" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo"
            resultMap="BaseResultMap">
        select
        tdi.id, tdi.`name`, tdi.`desc`, tdi.dataset_type_id, tdi.test_case_count, tdi.created_by, tdi.created_date,
        tdi.updated_date,
        tdti.id as type_id, tdti.`name` as type_name, tdti.`desc` as type_desc, tdti.default_service_address as
        type_default_service_address, tdti.created_by as type_created_by, tdti.created_date as type_created_date,
        tdti.updated_date as type_updated_date
        from test_datasets_info tdi left join test_dataset_types_info tdti on tdi.dataset_type_id = tdti.id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                tdi.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="name != null and name != ''">
                and tdi.name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="desc != null and desc != ''">
                and tdi.`desc` = #{desc,jdbcType=VARCHAR}
            </if>
            <if test="datasetTypeId != null">
                and tdi.dataset_type_id = #{datasetTypeId,jdbcType=INTEGER}
            </if>
            <if test="testCaseCount != null">
                and tdi.test_case_count = #{testCaseCount,jdbcType=INTEGER}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and tdi.created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDate != null">
                and tdi.created_date = #{createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updatedDate != null">
                and tdi.updated_date = #{updatedDate,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_datasets_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <delete id="deleteByPrimaryKeyList" parameterType="java.util.List">
        delete from test_datasets_info
        where id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo">
    insert into test_datasets_info (`name`, `desc`,
      dataset_type_id, test_case_count, created_by, 
      created_date)
    values ( #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR},
      #{datasetTypeId,jdbcType=INTEGER}, #{testCaseCount,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      now())
  </insert>
    <insert id="insertSelective" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo">
        insert into test_datasets_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="datasetTypeId != null">
                dataset_type_id,
            </if>
            <if test="testCaseCount != null">
                test_case_count,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            created_date
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="datasetTypeId != null">
                #{datasetTypeId,jdbcType=INTEGER},
            </if>
            <if test="testCaseCount != null">
                #{testCaseCount,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            now()
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo">
        update test_datasets_info
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="datasetTypeId != null">
                dataset_type_id = #{datasetTypeId,jdbcType=INTEGER},
            </if>
            <if test="testCaseCount != null">
                test_case_count = #{testCaseCount,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            updated_date = now()
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ifchange.regressiontest.model.TestDatasetsInfo">
    update test_datasets_info
    set `name` = #{name,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      dataset_type_id = #{datasetTypeId,jdbcType=INTEGER},
      test_case_count = #{testCaseCount,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_date = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>